// Compass Box-Sizing
@import "compass/css3/box-sizing";


//-----------------------------------
// Defaults
//-----------------------------------
$fluid-support-for-ie7: false !default;
$fluid-debug: false !default;

//-----------------------------------
// Column Widths
//-----------------------------------

// apply a width to a column
@mixin fluid($i, $plus: 0, $context: $grid-columns, $context-plus: 0, $with-gutters: false) {
  @if $fluid-debug { @debug "@mixin fluid", $i, $plus, $context, $context-plus, $with-gutters; }
  
  width: fluid-column-width($i, $plus, $context, $context-plus);
  @if $fluid-support-for-ie7 { 
    *width: fluid-column-width($i, $plus, $context, $context-plus, $nudge: true);
  }
  @if $with-gutters { @include fluid-column-gutters($context, $context-plus); }
}

// apply standard gutters to a column or row
@mixin fluid-gutters($context: $grid-columns, $context-plus: 0, $row: false) {
  @if $fluid-debug { @debug "@mixin fluid-gutters", $context, $context-plus, $row; }

  margin: 0 fluid-gutter-width($context, $context-plus, $row);
  @if $fluid-support-for-ie7 { 
    *margin: 0 fluid-gutter-width($context, $context-plus, $row, $nudge: true);
  }
}
@mixin fluid-row-gutters($context: $grid-columns, $context-plus: 0) {
  @include fluid-gutters($context, $context-plus, true);
}
@mixin fluid-column-gutters($context: $grid-columns, $context-plus: 0) {
  @include fluid-gutters($context, $context-plus, false);
}

// return a percentage column width relative to a row width
@function fluid-column-width($i, $plus: 0, $context: $grid-columns, $context-plus: 0, $nudge: false) {
  @if $fluid-debug { @debug "@function fluid-column-width", $i, $plus, $context, $context-plus, $nudge; }

  @return fluid-width(grid-column-width($i, $plus), grid-row-width($context, $context-plus), $nudge);
}

// return a percentage gutter width relative to a column or row width
@function fluid-gutter-width($context: $grid-columns, $context-plus: 0, $row: false, $nudge: false) {
  @if $fluid-debug { @debug "@function fluid-gutter-width", $context, $context-plus, $row, $nudge; }

  @return fluid-width($grid-gutter-width / 2 * if($row, -1, 1), grid-row-width($context, $context-plus + if($row, -$grid-gutter-width, 0)), $nudge);
}

// return a percentage width relative to a parent width
@function fluid-width($width, $context-width: grid-column-width($grid-columns, $grid-gutter-width), $nudge: false) {
  @if $fluid-debug { @debug "@function fluid-width", $width, $context-width, $nudge; }

  @return percentage($width / $context-width) + if($nudge, fluid-nudge($context-width), 0);
}

// return a percentage for a half-pixel
@function fluid-nudge($context-width: grid-column-width($grid-columns, $grid-gutter-width)) {
  @return percentage(-0.5px / $context-width);
}


//-----------------------------------
// Containers
//-----------------------------------

// specify a container as a page
@mixin fluid-page($i: $grid-columns, $plus: 0, $use-max-width: true, $extend: $grid-clearfix-extend) {
  @if $fluid-debug { @debug "@mixin fluid-page", $i, $plus, $use-max-width; }

  @include grid-clearfix($extend);
  @include box-sizing(border-box);
  @if $use-max-width { max-width: grid-column-width($i, $plus + $grid-gutter-width); }
  width: 100%;
  margin: 0 auto;
}

// specify a container as a row
@mixin fluid-row($page: false, $context: $grid-columns, $context-plus: 0, $extend: $grid-clearfix-extend) {
  @if $fluid-debug { @debug "@mixin fluid-row", $page, $context, $context-plus; }

  @include grid-clearfix($extend);
  @include box-sizing(border-box);
  width: auto;
  
  // rows directly inside a page don't need the negative margin
  @if $page {
    margin: 0 0;
  } @else {
    @include fluid-row-gutters($context, $context-plus);
  }
}

//-----------------------------------
// Columns
//-----------------------------------

// specify a column
@mixin fluid-column($i: false, $plus: 0, $context: $grid-columns, $context-plus: 0, $with-gutters: true) {
  @if $fluid-debug { @debug "@mixin fluid-column", $i, $plus, $context, $context-plus, $with-gutters; }

  @include box-sizing(border-box);
  float: left;
  @if $grid-support-for-ie6 { _display: inline; }
  @if $with-gutters { @include fluid-column-gutters($context, $context-plus); }
  
  // apply a width
  @if $i { @include fluid($i, $plus, $context, $context-plus); }
}

// alter the margins of a column
@mixin fluid-offset($i: 1, $plus: 0, $side: left, $context: $grid-columns, $context-plus: 0) {
  @if $fluid-debug { @debug "@mixin fluid-column", $i, $plus, $side, $context, $context-plus; }

  margin-#{$side}: (fluid-column-width($i, $plus, $context, $context-plus) + fluid-gutter-width($context, $context-plus) * 3);
  @if $fluid-support-for-ie7 {
    *margin-#{$side}: (fluid-column-width($i, $plus, $context, $context-plus, $nudge: nudge) + fluid-gutter-width($context, $context-plus, $nudge: nudge) * 3);
  }
}

// convenience mixin for left offsets
@mixin fluid-offset-left($i: 1, $plus: 0, $context: $grid-columns, $context-plus: 0) {
  @include fluid-offset($i, $plus, left, $context, $context-plus);
}

// convenience mixin for right offsets
@mixin fluid-offset-right($i: 1, $plus: 0, $context: $grid-columns, $context-plus: 0) {
  @include fluid-offset($i, $plus, right, $context, $context-plus);
}

//-----------------------------------
// Default Styles
//-----------------------------------
@mixin fluid-css() {
  // containers
  .fluid-page {
    @include fluid-page;
  }
  .fluid-row {
    @include fluid-row;
  }
  .fluid-page > .fluid-row {
    @include fluid-row(true);
  }
  .fluid-column {
    @include fluid-column;
  }

  @for $i from 1 through $grid-columns {
    // columns widths
    .fluid-#{$i} {
      width: fluid-column-width($i);
      > .fluid-row { @include fluid-row-gutters($i); }
      > .fluid-row > .fluid-column { @include fluid-column-gutters($i); }
      @for $j from 1 through $grid-columns - 1 {
        @if $j <= $i {
          > .fluid-row > .fluid-#{$j} { width: fluid-column-width($j, 0, $i); }
        }
        @if $j < $i {
          > .fluid-row > .fluid-before-#{$j} { @include fluid-offset-left($j, 0, $i); }
          > .fluid-row > .fluid-after-#{$j} { @include fluid-offset-right($j, 0, $i); }
        }
      }
    }

    // alter left and right margins
    @if $i < $grid-columns {
      .fluid-before-#{$i} { @include fluid-offset-left($i); }
      .fluid-after-#{$i} { @include fluid-offset-right($i); }
    }
  }

  // Box
  .fluid-box {
    margin-bottom: $grid-gutter-width;
  }
}